---
include:
  - docassemble.AssemblyLine:assembly_line.yml
---
metadata:
  title: >-
    Informal reply brief form
  short title: >-
    Informal reply brief form
  description: |-
    Informal reply brief form
  can_I_use_this_form: |
  before_you_start: |
    Before you get started, you need to...
  maturity: production
  estimated_completion_minutes: ""
  estimated_completion_delta: ""
  tags: []
  authors:
    -  
  original_form: []
  original_form_published_on: ""
  allowed_courts: []
  typical_role: "unknown"
  al_weaver_version: "1.11.0"
  generated_on: "2024-10-30"
  languages:
    - en
  jurisdiction: ""
  review_date: 2024-10-30
  form_titles:
    - Informal reply brief form
  form_numbers: []
  update_notes: |
---
code: |
  # This controls the default country and list of states in address field questions
  AL_DEFAULT_COUNTRY = "US"
---
code: |
  # This controls the default state in address field questions
  AL_DEFAULT_STATE = ""
---
code: |
  github_repo_name =  'docassemble-InformalReplyBriefForm'
---
code: |
  interview_short_title = "File a Informal reply brief form"
---
code: |
  al_form_type = "existing_case" 
---
objects:
  - users: ALPeopleList
  - other_parties: ALPeopleList
---
sections:
  - review_informal_reply_brief_form: Review your answers
---
#################### Interview order #####################
comment: |
  Controls order and branching logic for questions specific to this form
id: interview_order_informal_reply_brief_form
code: |
  # Set the allowed courts for this interview
  allowed_courts = []
  nav.set_section("review_informal_reply_brief_form")
  # Below sets the user_role and user_ask_role by asking a question.
  # You can set user_ask_role directly instead to either 'plaintiff' or 'defendant'
  user_ask_role
  users.gather()
  set_parts(subtitle=str(users))
  users[0].pronouns
  users[0].email
  set_progress(16)
  users[0].phone_number
  users[0].address.address
  other_parties.gather()
  set_progress(32)
  other_parties[0].email
  other_parties[0].address.address
  docket_number
  set_progress(48)
  trial_court
  appeal_reply_conclusion
  users[0].signature_date
  interview_order_informal_reply_brief_form = True
---
###################### Main order ######################
comment: |
  This block includes the logic for standalone interviews.
  Delete mandatory: True to include in another interview
mandatory: True
code: |
  al_intro_screen
  informal_reply_brief_form_intro
  interview_order_informal_reply_brief_form
  signature_date
  # Store anonymous data for analytics / statistics
  store_variables_snapshot(
      persistent=True,
      data={
          "zip": showifdef("users[0].address.zip"),
          "reached_interview_end": True,
      },
  )
  informal_reply_brief_form_download
---
id: Informal_reply_brief_form
continue button field: informal_reply_brief_form_intro
question: |
  Informal reply brief form
subquestion: |
  Before you get started, you need to...


---
id: Users 0 signature date
question: |
  Users[0].signature date
fields:
  - "Date of Users[0].signature": users[0].signature_date
    datatype: date
---
id: Users 0 pronouns
question: |
  Users[0].pronouns
fields:
  - "Users[0].pronouns": users[0].pronouns
---
id: Appeal reply conclusion
question: |
  Appeal reply conclusion
fields:
  - "Appeal reply conclusion": appeal_reply_conclusion
  - "Appeal reply arguments[i].legal citation": appeal_reply_arguments[i].legal_citation
  - "Appeal reply arguments[i].reason": appeal_reply_arguments[i].reason
  - "Appeal reply arguments[i].fact reference": appeal_reply_arguments[i].fact_reference
---
id: preview informal_reply_brief_form
question: |
  Preview your form before you sign it
subquestion: |
  Here is a preview of the form you will sign on the next page.   
  
  ${ al_court_bundle.as_pdf(key='preview') }

  Click the image to open it in a new tab. Click the "Edit answers" button
  to edit your answers.

  ${ action_button_html(url_action('review_informal_reply_brief_form'), label='Edit answers', color='info') }
  
  Remember to come back to this window to continue and sign your form.
continue button field: informal_reply_brief_form_preview_question    
---
code: |
  signature_fields = ['users[0].signature']
---
code: |
  # This is a placeholder for the addresses that will be searched
  # for matching address to court. Edit if court venue is based on 
  # a different address than the user's
  [user.address.address for user in users.complete_elements()]
  addresses_to_search = [user.address for user in users.complete_elements()]
---
id: informal reply brief form review screen
event: review_informal_reply_brief_form
question: |
  Review your answers
review:
  - Edit: appeal_reply_conclusion
    button: |
      **Appeal reply conclusion**:
      ${ appeal_reply_conclusion }
  - Edit: users.revisit
    button: |
      **Users**

      % for item in users:
        * ${ item }
      % endfor
  - Edit: appeal_reply_arguments[i].legal_citation
    button: |
      **Appeal reply arguments[i].legal citation**:
      ${ appeal_reply_arguments[i].legal_citation }
  - Edit: other_parties.revisit
    button: |
      **Other parties**

      % for item in other_parties:
        * ${ item }
      % endfor
  - Edit: docket_number
    button: |
      **Docket number**:
      ${ docket_number }
  - Edit: trial_court
    button: |
      **Trial court**
  
      % if defined("trial_court.name.first"):
      * name: ${ trial_court.name.full() }
      % endif
  - Edit: appeal_reply_arguments[i].reason
    button: |
      **Appeal reply arguments[i].reason**:
      ${ appeal_reply_arguments[i].reason }
  - Edit: appeal_reply_arguments[i].fact_reference
    button: |
      **Appeal reply arguments[i].fact reference**:
      ${ appeal_reply_arguments[i].fact_reference }
---
continue button field: users.revisit
question: |
  Edit users
subquestion: |
  ${ users.table }

  ${ users.add_action() }
---
table: users.table
rows: users
columns:
  - Email: |
      row_item.email if defined("row_item.email") else ""
  - Phone number: |
      row_item.phone_number if defined("row_item.phone_number") else ""
  - Signature date: |
      row_item.signature_date if defined("row_item.signature_date") else ""
  - Pronouns: |
      row_item.pronouns if defined("row_item.pronouns") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
  - Signature: |
      row_item.signature if defined("row_item.signature") else ""
edit:
  - email
  - phone_number
  - signature_date
  - pronouns
  - address.address
  - name.first
  - signature
confirm: True

---
continue button field: other_parties.revisit
question: |
  Edit other_parties
subquestion: |
  ${ other_parties.table }

  ${ other_parties.add_action() }
---
table: other_parties.table
rows: other_parties
columns:
  - Email: |
      row_item.email if defined("row_item.email") else ""
  - Address: |
      row_item.address.block() if defined("row_item.address.address") else ""
  - Name: |
      row_item.name.full() if defined("row_item.name.first") else ""
edit:
  - email
  - address.address
  - name.first
confirm: True

---
id: download informal_reply_brief_form
event: informal_reply_brief_form_download
question: |
  All done
subquestion: |
  Thank you ${users}. Your form is ready to download and deliver.
  
  View, download and send your form below. Click the "Edit answers" button to fix any mistakes.

  ${ action_button_html(url_action('review_informal_reply_brief_form'), label='Edit answers', color='info') }
  
  
  ${ al_user_bundle.download_list_html() }
  

  ${ al_user_bundle.send_button_html(show_editable_checkbox=True) }

progress: 100
---
# ALDocument objects specify the metadata for each template
objects:
  - informal_reply_brief_form_Post_interview_instructions: ALDocument.using(title="Instructions", filename="informal_reply_brief_form_next_steps.docx", enabled=True, has_addendum=False)
  - informal_reply_brief_form_attachment: ALDocument.using(title="Informal reply brief form", filename="informal_reply_brief_form", enabled=True, has_addendum=False, )
---
# Bundles group the ALDocuments into separate downloads, such as for court and for the user
objects:
  - al_user_bundle: ALDocumentBundle.using(elements=[informal_reply_brief_form_Post_interview_instructions, informal_reply_brief_form_attachment], filename="informal_reply_brief_form", title="All forms to download for your records", enabled=True)
  - al_court_bundle: ALDocumentBundle.using(elements=[informal_reply_brief_form_attachment],  filename="informal_reply_brief_form", title="All forms to deliver to court", enabled=True)
---
# Each attachment defines a key in an ALDocument. We use `i` as the placeholder here so the same template is 
# used for "preview" and "final" keys, and logic in the template checks the value of 
# `i` to show or hide the user's signature
attachment:
  name: Post-interview-Instructions
  filename: informal_reply_brief_form_next_steps
  docx template file: informal_reply_brief_form_next_steps.docx
  variable name: informal_reply_brief_form_Post_interview_instructions[i]
  skip undefined: True
  tagged pdf: True
---
attachment:
  name: informal reply brief form
  filename: informal_reply_brief_form
  variable name: informal_reply_brief_form_attachment[i]
  skip undefined: True
  docx template file: informal_reply_brief_form.docx
  tagged pdf: True



